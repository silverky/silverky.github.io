<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>CodePod</title><description>Thoughts, stories and ideas about code</description><link>http://localhost:2368/</link><image><url>http://localhost:2368/favicon.png</url><title>CodePod</title><link>http://localhost:2368/</link></image><generator>Ghost 3.19</generator><lastBuildDate>Mon, 15 Jun 2020 04:15:50 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Deploy Spring Boot microservices on Kubernetes</title><description>&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;&lt;p&gt;Spring Boot is an opinionated framework for quickly building production-ready Spring applications. This pattern shows you how to create and deploy Spring Boot microservices within a polyglot application and then deploy the app to a Kubernetes cluster.&lt;/p&gt;&lt;h2 id="description"&gt;Description&lt;/h2&gt;&lt;p&gt;The Java community is finding innovative ways to use technologies like&lt;/p&gt;</description><link>http://localhost:2368/deploy-spring-boot-microservices-on-kubernetes/</link><guid isPermaLink="false">5ee6f12ba9bc1715a4b41003</guid><dc:creator>dungbv</dc:creator><pubDate>Mon, 15 Jun 2020 03:55:44 GMT</pubDate><content:encoded>&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;&lt;p&gt;Spring Boot is an opinionated framework for quickly building production-ready Spring applications. This pattern shows you how to create and deploy Spring Boot microservices within a polyglot application and then deploy the app to a Kubernetes cluster.&lt;/p&gt;&lt;h2 id="description"&gt;Description&lt;/h2&gt;&lt;p&gt;The Java community is finding innovative ways to use technologies like Java EE within microservices architectures. The Spring framework is an established presence in the Java ecosystem, and now Spring Boot is garnering a lot of attention because it radically simplifies writing a Spring application.&lt;/p&gt;&lt;p&gt;Spring Boot takes an opinionated view of building Spring applications. You can use Spring Boot to create stand-alone Java applications that can be started using the Java &lt;code&gt;-jar&lt;/code&gt; command or more traditional WAR deployments. Spring applications can be deployed as WAR files atop existing app servers, or they can be built into a “fat” JAR file with an embedded app server. Either choice works well within a Docker container. You can then rely on native Spring platforms like Spring Cloud to perform tasks such as service discovery, registration, and load balancing.&lt;/p&gt;&lt;p&gt;But what do we do in the context of polyglot applications? For managing a system of polyglot microservices, you need a general-purpose microservices and container orchestration platform, and that’s where Kubernetes shines. In this developer pattern, you’ll build an app called Office Space — and yes, it’s inspired by Michael Bolton’s idea in the movie “Office Space.” When you complete the pattern, you’ll understand how to deploy a polyglot microservices application, including Spring Boot microservices, on a Kubernetes cluster.&lt;/p&gt;&lt;h2 id="flow"&gt;Flow&lt;/h2&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="https://developer.ibm.com/developer/patterns/deploy-spring-boot-microservices-on-kubernetes/images/Deploy-Spring-Boot-microservices-on-Kubernetes.png" class="kg-image" alt="flow"&gt;&lt;/figure&gt;&lt;ol&gt;&lt;li&gt;The Transaction Generator service written in Python simulates transactions and pushes them to the Compute Interest microservice.&lt;/li&gt;&lt;li&gt;The Compute Interest microservice computes the interest and then moves the fraction of pennies to the MySQL database to be stored.&lt;/li&gt;&lt;li&gt;The database can be running within a container in the same deployment or on a public cloud such as IBM Cloud.&lt;/li&gt;&lt;li&gt;The Compute Interest microservice then calls the notification service to notify the user if an amount has been deposited in the user’s account.&lt;/li&gt;&lt;li&gt;The Notification service uses OpenWhisk actions to send an email message to the user. You can also invoke an OpenWhisk action to send messages to Slack.&lt;/li&gt;&lt;li&gt;Additionally, an OpenWhisk action to send messages to Slack can also be invoked.&lt;/li&gt;&lt;li&gt;The user retrieves the account balance by visiting the Node.js web interface.&lt;/li&gt;&lt;/ol&gt;</content:encoded></item><item><title>Makdown</title><description>&lt;h3 id="text"&gt;Text&lt;/h3&gt;&lt;p&gt;It's very easy to make some words &lt;strong&gt;bold&lt;/strong&gt; and other words &lt;em&gt;italic&lt;/em&gt; with Markdown. You can even &lt;a href="http://google.com"&gt;link to Google!&lt;/a&gt;&lt;/p&gt;&lt;hr&gt;&lt;h3 id="list"&gt;List&lt;/h3&gt;&lt;p&gt;Sometimes you want numbered lists:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;One&lt;/li&gt;&lt;li&gt;Two&lt;/li&gt;&lt;li&gt;Three&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Sometimes you want bullet points:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Start a line with a star&lt;/li&gt;&lt;li&gt;Profit!&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Alternatively,&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Dashes work just as well&lt;/li&gt;&lt;li&gt;And if&lt;/li&gt;&lt;/ul&gt;</description><link>http://localhost:2368/makdown/</link><guid isPermaLink="false">5ee6ec97a9bc1715a4b40ff9</guid><dc:creator>dungbv</dc:creator><pubDate>Mon, 15 Jun 2020 03:36:26 GMT</pubDate><content:encoded>&lt;h3 id="text"&gt;Text&lt;/h3&gt;&lt;p&gt;It's very easy to make some words &lt;strong&gt;bold&lt;/strong&gt; and other words &lt;em&gt;italic&lt;/em&gt; with Markdown. You can even &lt;a href="http://google.com"&gt;link to Google!&lt;/a&gt;&lt;/p&gt;&lt;hr&gt;&lt;h3 id="list"&gt;List&lt;/h3&gt;&lt;p&gt;Sometimes you want numbered lists:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;One&lt;/li&gt;&lt;li&gt;Two&lt;/li&gt;&lt;li&gt;Three&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Sometimes you want bullet points:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Start a line with a star&lt;/li&gt;&lt;li&gt;Profit!&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Alternatively,&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Dashes work just as well&lt;/li&gt;&lt;li&gt;And if you have sub points, put two spaces before the dash or star:&lt;/li&gt;&lt;li&gt;Like this&lt;/li&gt;&lt;li&gt;And this&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;h3 id="image"&gt;Image&lt;/h3&gt;&lt;p&gt;If you want to embed images, this is how you do it:&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="https://octodex.github.com/images/yaktocat.png" class="kg-image" alt="Image of Yaktocat"&gt;&lt;/figure&gt;&lt;hr&gt;&lt;h3 id="header-quotes"&gt;Header &amp;amp; Quotes&lt;/h3&gt;&lt;h1 id="structured-documents"&gt;Structured documents&lt;/h1&gt;&lt;p&gt;Sometimes it's useful to have different levels of headings to structure your documents. Start lines with a &lt;code&gt;#&lt;/code&gt; to create headings. Multiple &lt;code&gt;##&lt;/code&gt; in a row denote smaller heading sizes.&lt;/p&gt;&lt;h3 id="this-is-a-third-tier-heading"&gt;This is a third-tier heading&lt;/h3&gt;&lt;p&gt;You can use one &lt;code&gt;#&lt;/code&gt; all the way up to &lt;code&gt;######&lt;/code&gt; six for different heading sizes.&lt;/p&gt;&lt;p&gt;If you'd like to quote someone, use the &amp;gt; character before the line:&lt;/p&gt;&lt;blockquote&gt;Coffee. The finest organic suspension ever devised... I beat the Borg with it.&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Captain Janeway&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;h3 id="code"&gt;Code&lt;/h3&gt;&lt;p&gt;There are many different ways to style code with GitHub's markdown. If you have inline code blocks, wrap them in backticks: &lt;code&gt;var example = true&lt;/code&gt;.  If you've got a longer block of code, you can indent with four spaces:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;if (isAwesome){
  return true
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;GitHub also supports something called code fencing, which allows for multiple lines without indentation:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;if (isAwesome){
  return true
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And if you'd like to use syntax highlighting, include the language:&lt;/p&gt;&lt;pre&gt;&lt;code class="language-javascript"&gt;if (isAwesome){
  return true
}
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&lt;h3 id="extra"&gt;Extra&lt;/h3&gt;&lt;p&gt;GitHub supports many extras in Markdown that help you reference and link to people. If you ever want to direct a comment at someone, you can prefix their name with an @ symbol: Hey @kneath — love your sweater!&lt;/p&gt;&lt;p&gt;But I have to admit, tasks lists are my favorite:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;[x] This is a complete item&lt;/li&gt;&lt;li&gt;[ ] This is an incomplete item&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;When you include a task list in the first comment of an Issue, you will see a helpful progress bar in your list of issues. It works in Pull Requests, too!&lt;/p&gt;&lt;p&gt;And, of course emoji!&lt;/p&gt;</content:encoded></item></channel></rss>